[%#
# Copyright 2010 - Prefeitura Municipal de Fortaleza
#
# Este arquivo é parte do programa Ação - Sistema de Acompanhamento de
# Projetos Sociais
#
# O Ação é um software livre; você pode redistribui-lo e/ou modifica-lo
# dentro dos termos da Licença Pública Geral GNU como publicada pela
# Fundação do Software Livre (FSF); na versão 2 da Licença.
#
# Este programa é distribuido na esperança que possa ser util, mas SEM
# NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
# MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU
# para maiores detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o
# título "LICENCA.txt", junto com este programa, se não, escreva para a
# Fundação do Software Livre(FSF) Inc., 51 Franklin St, Fifth Floor,
%]
[% META title = 'Lista de Alertas'%]
[% INCLUDE 'auth/registros/consolidador/definicaoconsolidacao/consolidacao/header.tt' %]
[% INCLUDE 'errosucesso.tt' %]

[% # Bloco responsavel pelo request das variaveis da paginação %]
[% SET linhas_por_pagina = 12 %]
[% SET pagina_atual = c.req.param('pagina_atual') %]
[% IF !pagina_atual %]
  [% SET pagina_atual = 1 %]
[% END %]

[% # Bloco responsavel pelo request das variaveis de filtro %]
[% SET all_levels = 
  { 'FATAL' => 'Erros definitivos',
    'TRACE' => 'Detalhamento da execução',
    'ERROR' => 'Erros de execução', 
    'DEBUG' => 'Informação do processamento',
    'WARNING' => 'Alertas '
} %]
[% SET levels = [] %]

[% # Verifica quais levels estao marcados e os insere no array levels para ser usado no DBIx::Class %]
[% FOREACH level IN all_levels.keys %]
  [% IF c.req.param(level) %]
    [% CALL levels.push(level) %]
  [% END %]
[% END %]

[% # Marca os campos com os nomes dos levels com checked %]
[% IF levels.size == 0 %]
 [% SET levels = all_levels.keys %]
 [% FOREACH level IN all_levels.keys %]
   [% CALL c.req.param(level,'on') %]
 [% END %]
[% END %]

[% SET args = { } %]
[% CALL args.import(c.req.params) %]

<form id="form" method="post" action="[%c.uri_for_action('/auth/registros/consolidador/definicaoconsolidacao/consolidacao/lista')%]">
<DL>
 <DT>Filtrar por:</DT>
 [% FOREACH level IN all_levels.keys %]
    <dd>
      <input type="checkbox" id="chk_[% level %]" name="[% level %]"[% IF c.req.param(level) %] checked[% END %] />
      <LABEL for="chk_[% level %]">[% all_levels.item(level) %]</LABEL>
    </dd>
 [% END %]
</DL>
 <input type="submit" name="submit" value="Filtrar" />
</tbody>
</table>
</form>


<table>
 <caption>Alertas dessa Consolidação</caption>
<thead>
 <tr>
  <th align="center">Etapa</th>
  <th align="center">Data/Hora</th>
  <th align="center">Alerta</th>
  <th align="center">Log</th>
  <th align="center">A&ccedil;&otilde;es</th>
 </tr>
</thead>
<tbody id="alertas_tbody">
 [% SET alertas_rs = consolidacao.alertas_rs({ log_level => { 'IN' => levels }},
        {page => pagina_atual, rows => linhas_por_pagina, order_by => 'id_alerta' }) %]
 [% SET numpag = int( alertas_rs.count() / linhas_por_pagina ) %]
 [% IF !numpag %][% SET numpag = 1 %][% END %]
 [% FOREACH alerta IN alertas_rs.all() %]
   [% INCLUDE 'auth/registros/consolidador/definicaoconsolidacao/consolidacao/fragmento.tt' %]
 [% END %]
</tbody>
</table>

[% IF pagina_atual > 1 %]
    [% args.import({ pagina_atual => pagina_atual - 1 }) %]
    <a href="[% c.uri_for_action('/auth/registros/consolidador/definicaoconsolidacao/consolidacao/lista', [ id_definicao_consolidacao, consolidacao.id_consolidacao ], args) %]"> Anterior </a>
[% END %]

&nbsp

    [% args.import({ pagina_atual => pagina_atual + 1 }) %]
    <a href="[% c.uri_for_action('/auth/registros/consolidador/definicaoconsolidacao/consolidacao/lista', [ id_definicao_consolidacao, consolidacao.id_consolidacao ], args) %]"> Pr&oacute;ximo </a>

[% IF consolidacao.status != 'Finalizada' %]
<script type="text/javascript">
var url_template = "[% c.uri_for_action('/auth/registros/consolidador/definicaoconsolidacao/consolidacao/fragmentos_alertas', [ id_definicao_consolidacao, consolidacao.id_consolidacao], '__aid__', c.req.params) %]";
function definir_timeout() {
     var ultimo_alerta = $('#alertas_tbody tr:last-child');
     var aid = 0;
     //em busca do ID da ultima <tr>
     if (ultimo_alerta) {
        var alerta_id = ultimo_alerta.attr('id');
        //caso exista guarda o valor numerio dele extraido do campo ID        
        if (alerta_id) {
           aid = alerta_id.substr(7);
        }
        //em busca do innerHtml da ultima <tr> para verificar se a etapa é a ultima (5)
        var etapa = ultimo_alerta.find('td:first-child').html();
        if (etapa == 5) {
            window.alert("Consolidacao finalizada!");
            return;
        }
     }
     window.setTimeout(function() {
           var myurl = url_template.replace('__aid__',aid);
           $.get(myurl, function(data) {
              $('#alertas_tbody').append(data);
              definir_timeout();
           });
        }, 3000);
 }
 definir_timeout();
</SCRIPT>
[% END %]

[% INCLUDE 'footer.tt' %]
