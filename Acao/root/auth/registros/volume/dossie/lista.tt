[%#
# Copyright 2010 - Prefeitura Municipal de Fortaleza
#
# Este arquivo é parte do programa Ação - Sistema de Acompanhamento de
# Projetos Sociais
#
# O Ação é um software livre; você pode redistribui-lo e/ou modifica-lo
# dentro dos termos da Licença Pública Geral GNU como publicada pela
# Fundação do Software Livre (FSF); na versão 2 da Licença.
#
# Este programa é distribuido na esperança que possa ser util, mas SEM
# NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
# MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU
# para maiores detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o
# título "LICENCA.txt", junto com este programa, se não, escreva para a
# Fundação do Software Livre(FSF) Inc., 51 Franklin St, Fifth Floor,%]
[% USE Dumper %]


[% META title = 'Lista de Leituras para o Digitador'%]
[% INCLUDE 'auth/registros/volume/dossie/header.tt' %]
[% INCLUDE 'errosucesso.tt' %]

[% #A variavel num_por_pagina deve ser um numero PAR%]
[% SET num_por_pagina = 30 %]

[% SET interval_ini = c.req.param('interval_ini') %]
[% IF !interval_ini %]
  [% SET interval_ini = 0 %]
[% END %]

[% SET nome_membro = c.req.param('nome_membro') %]
[% SET nome_mae = c.req.param('nome_mae') %]

[% SET vol = ( c.model('Volume').getDadosVolumeId(id_volume, c.model('LDAP').assuntos_dn, c.model('LDAP').local_dn) ) %]
[% SET numero_campos = (c.req.param('numero_campos')||0) + 0 %]
[% SET numero_colunas = (c.req.param('numero_colunas')||0) + 0 %]
[% SET labels = [] %]
[% SET colunas_csv = [] %]
[% SET linhas_csv = [] %]
[% SET labels_col = [] %]

[% IF c.req.param('add_campo_pesquisa');
   CALL c.req.param('pesquisa_' _ numero_campos _ '_ns', c.req.param('xsd_pesquisa'));
   SET numero_campos = numero_campos + 1;
   ELSIF c.req.param('del_campo_pesquisa') && numero_campos > 0;
   SET numero_campos = numero_campos - 1;
   END;
%]
[% IF c.req.param('add_coluna');
   CALL c.req.param('col_' _ numero_colunas _ '_ns', c.req.param('xsd_coluna'));
   SET numero_colunas = numero_colunas + 1;
   ELSIF c.req.param('del_coluna') && numero_colunas > 0;
   SET numero_colunas = numero_colunas - 1;
   END;
%]
<div id="accordion">
  <h3><a href="#">Dados do Volume: <span class="label"> [% vol.nome %] </span></a>
  </h3>
  <div>
    <fieldset class="fieldsetBorderNone">
        <dl class="form15">
           <dt><label> Volume:</label></dt>
           <dd> <span>[% vol.nome %]</span>	</dd>

           <dt>Classificação:</dt>
           <dd><span>[% vol.classificacoes %]</span></dd>

           <dt>Localização:</dt>
           <dd>
             <span>
               [% IF vol.localizacao.replace('\s+','') == c.model('LDAP').local_dn.replace('\s+','') %]
                 Virtual
               [% ELSE %]
                 [% vol.localizacao.replace('\s+','') %]
               [% END %]
             </span>
           </dd>

           <dt>Estado:</dt>
           <dd><span>[% vol.estado %]</span></dd>

           <dt>Data Criação:</dt>
           <dd><span class="longDateFormat">[% vol.criacao %]</span></dd>

           <dt>Vol. Físico:</dt>
           <dd><span>[% vol.volume_fisico %]</span></dd>
        </dl>
    </fieldset>
  </div>
</div>
 <div id="operacoes">
     [% IF c.model('Volume').pode_alterar_volume(id_volume) %]
        <a href="[% c.uri_for_action('/auth/registros/volume/alterar_volume', [ id_volume ]) %]" class="alterar" >Alterar volume</a>
        <a href="[% c.uri_for_action('/auth/registros/volume/alterar_estado', [ id_volume ],'fechado') %]" class="_fechar" title="Fechar" onclick="return confirmaFechamentoVolume();" > Fechar </a>
      [% END %]
</div>

<br/>
<!--<h3 class="">Gerenciar Prontuários-->
<!--  <span style="font-size:13px; font-weight:normal;">-->
<!--  </span>-->
<!--</h3>-->
<div id="caixaAcoes">
  <h3>Gerenciar Prontuários   </h3>
      <span class="operacoes">
        [% IF c.model('Dossie').pode_criar_dossie(id_volume) %]
            <a class="_criar" href="[% c.uri_for_action('/auth/registros/volume/dossie/form', [ id_volume ]) %]">Criar Prontuário</a>
        [% END %]
        [% IF numero_colunas <= 0 %]
             <a class="criarCSV" href="javascript:void(0);">Exportar resultados</a>
        [% END %]
       </span>
  <br/><br/>
      <form action="[% c.uri_for_action('/auth/registros/volume/dossie/lista', [ id_volume ]) %]" method="post">
  
[% IF c.req.param('col_0_ns') %]
    <fieldset id="fieldsetColunasShow">
  [% ELSE %]
    <fieldset id="fieldsetColunas">
  [% END %]

    <legend>Colunas do CSV</legend>
       <div>
          <label>Adicionar uma Coluna de CSV:
            <select name="xsd_coluna">[% c.model('XSD').options_xsd(id_volume, controle, c.model('LDAP').assuntos_dn) %]</select>
          </label>
            <input type="submit" name="add_coluna" value="+" />
            [% IF numero_colunas > 0 %]<input type="submit" name="del_coluna" value="-" />[% END %]
            <input type="hidden" name="numero_colunas" value="[% numero_colunas %]" />
	    <input type="checkbox" name="documentos_inativos" [% IF c.req.param('documentos_inativos') %] checked="checked" [% END %] id="documentos_validos" /><strong>Incluir Documentos Inativos no CSV </strong>


       </div>
      [% SET counter_col = 0 %]
     <fieldset >
        <legend> Colunas</legend>
        [% WHILE (counter_col < numero_colunas) %]
        <fieldset id="coluna_[% counter_col %]">
         <legend></legend>
         [% SET schema_col = c.model('XSD').obter_xsd( c.req.param('col_' _ counter_col _ '_ns') ) %]
         <input type="hidden" name="col_[% counter_col %]_ns" value="[% c.req.param('col_' _ counter_col _ '_ns') %]" />
         <select name="campo_col_[% counter_col %]" id="campo_col_[% counter_col %]"  style="width:100%;">
          [% FOREACH field_c IN c.model('Dossie').get_simpletype_annotations(schema_col) %]
          [% colunas_csv.push(field_c.completelabel) %]
            <OPTION VALUE="[% field_c.path %]" [% IF (c.req.param('campo_col_' _ counter_col) == field_c.path); labels_col.push({ l => field_c.completelabel, ns => c.req.param('col_' _ counter_col _ '_ns'), p => field_c.path}) %] selected [% END %]>[% field_c.completelabel %]</OPTION>
          [% END %]
         </select>
        </fieldset>
        [% counter_col = counter_col + 1; END %]
      </fieldset>

    [% FOREACH l IN labels_col %]
            <input type="hidden" name="labels_colunas[]" value="[% l.l %]"/>
    [% END %]

  </fieldset>
  <fieldset>
    <legend>Buscar Prontuários</legend>
     <div>
      <div>
        <div style="float:right">
        [% statistics = c.model('Dossie').boxDossieStatistics(id_volume)  %]
            <table>
            <thead>
                <tr>
                    <th>Abertos</th>
                    <th >Fechados/Arquivados</th>
                    <th>Total</th>
            </tr>
            </thead>
                <tr>                   
                    <td style="text-align:center !important">[% statistics.abertos  %]</td>             
                    <td style="text-align:center !important">[% statistics.fechados  %]</td>
                    <td style="text-align:center !important">[% statistics.total  %]</td>
                </tr>    

            </table>
        </div>
       <input type="hidden" name="numero_campos" value="[% numero_campos %]" />
       <div>
        <label> Nome do prontuário:
        <input type="text" name="nome_prontuario" id="nome_prontuario" value="[% c.req.param('nome_prontuario') | html %]" /></label>
        <input type="checkbox" name="dossiesAbertos"  [% dossiesAbertos %] /> Abertos |
        <input type="checkbox" name="dossiesFechados" [% dossiesFechados %] /> Fechados/Arquivados 
         [% IF numero_colunas > 0 %]
              <input type="submit" name="submit_form" id="submit_form_2" value="Pré-visualizar CSV" />
          [% ELSE %]
              <input type="submit" name="submit_form" id="submit_form_2" value="Pesquisar" class="defaultEnter" />
          [% END %]
        [% IF c.req.param('submit_form') && (numero_colunas > 0)%]
          <input type="submit" name="gerarCSV" value="Gerar CSV" />
        [% END %]

       </div>
       <div>
        <label>Adicionar um campo de pesquisa: <select name="xsd_pesquisa">[% c.model('XSD').options_xsd(id_volume, controle, c.model('LDAP').assuntos_dn) %]</select></label>
        <input type="submit" name="add_campo_pesquisa" value="+" />
        [% IF numero_campos > 0 %]<input type="submit" name="del_campo_pesquisa" value="-" />[% END %]
       </div>
      </div>

      [% SET counter = 0 %]
      [% WHILE (counter < numero_campos) %]
      <fieldset id="campo_pesquisa_[% counter %]">
       <legend>Buscar em:</legend>
       [% SET schema = c.model('XSD').obter_xsd( c.req.param('pesquisa_' _ counter _ '_ns') ) %]
       <input type="hidden" name="pesquisa_[% counter%]_ns" value="[% c.req.param('pesquisa_' _ counter _ '_ns') %]" />
       <select name="campo_formulario_[% counter %]" id="campo_formulario_[% counter %]"  style="width:100%;">
        [% FOREACH field IN c.model('Dossie').get_simpletype_annotations(schema) %]
          <OPTION VALUE="[% field.path %]" [% IF (c.req.param('campo_formulario_' _ counter) == field.path); labels.push({ l => field.completelabel, ns => c.req.param('pesquisa_' _ counter _ '_ns'), p => field.path}) %] selected [% END %]>[% field.completelabel %]</OPTION>
        [% END %]
       </select>

       <select name="campo_operador_[% counter %]" id="campo_operador_[% counter %]">
        <option value="contem" [% IF (c.req.param('campo_operador_' _ counter) == 'contem') %] selected [% END %]>contém</option>
        <option value="igual" [% IF (c.req.param('campo_operador_' _ counter) == 'igual') %] selected [% END %]>igual a</option>
        <option value="igualn" [% IF (c.req.param('campo_operador_' _ counter) == 'igualn') %] selected [% END %]>igual a numero</option>
        <option value="diferente" [% IF (c.req.param('campo_operador_' _ counter) == 'diferente') %] selected [% END %]>diferente de</option>
        <option value="maior" [% IF (c.req.param('campo_operador_' _ counter) == 'maior') %] selected [% END %]>maior que</option>
        <option value="maiorn" [% IF (c.req.param('campo_operador_' _ counter) == 'maiorn') %] selected [% END %]>maior que numero</option>
        <option value="menor" [% IF (c.req.param('campo_operador_' _ counter) == 'menor') %] selected [% END %]>menor que</option>
        <option value="menorn" [% IF (c.req.param('campo_operador_' _ counter) == 'menorn') %] selected [% END %]>menor que numero</option>
        <option value="inicia" [% IF (c.req.param('campo_operador_' _ counter) == 'inicia') %] selected [% END %]>inicia com</option>
        <option value="termina" [% IF (c.req.param('campo_operador_' _ counter) == 'termina') %] selected [% END %]>termina com</option>
       </select>

       <input type="text" id="valor_pesquisado_[% counter %]" name="valor_pesquisado_[% counter %]" value="[% c.req.param('valor_pesquisado_' _ counter) | html %]"  />
      </fieldset>
      [% counter = counter + 1; END %]

     </div>
    </fieldset>
    </form>

  <br/>

  [% IF c.req.param('submit_form')  %]

   [% # O foreach abaixo vai buscar diretamente no model por estar livre de contexto %]
   [% # (nao recebe argumento pela url) %]

   [% TRY %]
   [%
      xqueryret = PROCESS 'auth/registros/volume/dossie/lista_xqueryret.tt';
      #    Listando dossies, pasando parametros para auditoria, construção da query e paginação .
      xquery = c.model('Dossie').listar_dossies({
                                                  xqueryret         => xqueryret,
                                                  ip                => c.req.address,
                                                  id_volume         => id_volume,
                                                  interval_ini      => interval_ini,
                                                  num_por_pagina    => num_por_pagina,
                                                  pesquisa          => c.req.params(),
					                        	  documentos_validos => documentos_validos
                                                });
        #"<textarea cols=180 rows=80>" _ xquery.list _ "</textarea>";
        #c.model('Sedna').conn.setConnectionAttr_CONCURRENCY_TYPE(c.model('Sedna').conn.SEDNA_READONLY_TRANSACTION);
        c.model('Sedna').begin ;
        c.model('Sedna').execute( xquery.list );
    %]

  <table id="buscadossie">
  <thead>
   <tr>
    <th width="70px">Controle</th>
    <th>Prontuário</th>
    <th>Classificação</th>
    <!--<th>Localização</th>-->
    <th width="80px">Pront. Físico</th>
    <th width="110px">Criação</th>
    <th width="110px">Fechamento</th>
    <th width="110px">Arquivamento</th>
    <th width="40px">Estado</th>
    <th colspan="6" align="center">Ação</th>
   </tr>
  </thead>

   [%
     WHILE (control = c.model('Sedna').get_item) ;
       CALL c.controller.audit_listar(control);
       SET html = c.model('Sedna').get_item ;
       html ;
     END
   %]

   [% # Executa a contagem dos registros para fazer a paginação  %]
   [%
      c.model('Sedna').execute( xquery.count );

        WHILE (contador = c.model('Sedna').get_item);
         count = contador;
        END;

     c.model('Sedna').commit;
     # c.model('Sedna').conn.setConnectionAttr_CONCURRENCY_TYPE(c.model('Sedna').conn.SEDNA_UPDATE_TRANSACTION); %]

   [% CATCH %]
   <div class="erro">ERRO AO PROCESSAR CONSULTA:
    <PRE>[% error.info %]</PRE>
   </div>
  [% END %]


  </table>

  [% paginacao = PROCESS 'auth/registros/volume/dossie/paginacao.tt' %]
  [% paginacao %]

  </fieldset>

  [% END %]
</div>
  <script type="text/javascript">
      function confirmaFechamento(){
          if (!confirm('Deseja realmente fechar este prontuário?')){
              return false;
          }
      }

      function confirmaArquivamento(){
          if (!confirm('Deseja realmente arquivar este prontuário?')){
              return false;
          }
      }

      function confirmaResgate(){
          if (!confirm('Deseja realmente resgatar este prontuário?')){
              return false;
          }
      }

      function confirmaFechamentoVolume(){
          if (!confirm('Deseja realmente fechar este volume?')){
               return false;
          }
      }

   $(".criarCSV").click(function() {
       if ($("#fieldsetColunas").css('display') == 'block') {
           $("#fieldsetColunas").hide();
       } else {
           $("#fieldsetColunas").show();
       }
   });
   //comportamento do ''ENTER''

    $("form input").keypress(function (e) {
        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
            $('.defaultEnter').click();
            return false;
        } else {
            return true;
        }
    });
  </script>
  [% INCLUDE 'footer.tt' %]
