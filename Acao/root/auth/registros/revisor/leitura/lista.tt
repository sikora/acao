[%#
# Copyright 2010 - Prefeitura Municipal de Fortaleza
#
# Este arquivo é parte do programa Ação - Sistema de Acompanhamento de
# Projetos Sociais
#
# O Ação é um software livre; você pode redistribui-lo e/ou modifica-lo
# dentro dos termos da Licença Pública Geral GNU como publicada pela
# Fundação do Software Livre (FSF); na versão 2 da Licença.
#
# Este programa é distribuido na esperança que possa ser util, mas SEM
# NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer
# MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU
# para maiores detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o
# título "LICENCA.txt", junto com este programa, se não, escreva para a
# Fundação do Software Livre(FSF) Inc., 51 Franklin St, Fifth Floor,
%]
[% META title = 'Listagem das leituras' %]

[% INCLUDE 'auth/registros/revisor/leitura/header.tt' %]
[% INCLUDE 'errosucesso.tt' %]

[% SET num_por_pagina = 50 %]

[% SET estadoControle = c.req.param('estadoControle') %]
[% IF estadoControle == "0" %]
  [% SET estadoControle = "" %]
[% END %]

[% SET interval_ini = c.req.param('interval_ini') %]
[% IF !interval_ini %]
  [% SET interval_ini = 0 %]
[% END %]

[%# definição da variavel schema para este template %]

[%# c.model('Sedna').conn.setConnectionAttr_CONCURRENCY_TYPE(c.model('Sedna').conn.SEDNA_READONLY_TRANSACTION); %]

[% CALL c.model('Sedna').begin %]
[% SET schema = c.model('Sedna').get_document(leitura.instrumento.xml_schema) %]
[% CALL c.model('Sedna').commit %]

[% c.model('Sedna').conn.setConnectionAttr_CONCURRENCY_TYPE(c.model('Sedna').conn.SEDNA_UPDATE_TRANSACTION); %]

[% SET tem_consulta_formulario = 0 %]
[% conteudo_buscasFormulario = PROCESS 'auth/registros/revisor/leitura/lista_buscaFormulario.tt' %]

[% SET modificador_rowspan = '' %]
[% SET modificador_classe_td = '' %]

[% IF tem_consulta_formulario %]
[% SET modificador_rowspan = ' * ' _ (tem_consulta_formulario + 2) %]
[% SET modificador_classe_td = ' linha_com_dados_extra' %]
[% SET targetNamespace = c.model('BuscaXSD').get_target_namespace(schema) %]
[% END %]

[% xqueryret = PROCESS 'auth/registros/revisor/leitura/lista_xqueryret.tt' %]
[% xquery = PROCESS 'auth/registros/revisor/leitura/lista_xquery.tt' %]


<form name="form" onSubmit="return valida_campos_busca()" action="[% c.uri_for_action('/auth/registros/revisor/leitura/lista', [ leitura.id_leitura ])  %]">

<fieldset>

  <h3>Buscar documento</h3>
  <dl class="buscaControle">
    <dt>
      <label for="controle">Controle:</label>
    </dt>
    <dd>
      de <input type="text" name="controle_ini" id="controle_ini" value="[% c.req.param('controle_ini') %]" /> 
      a <input type="text" name="controle_fim" id="controle_fim" value="[% c.req.param('controle_fim') %]" />
    </dd>
    <dt>
      <label for="controle">Situa&ccedil;&atilde;o do Controle:</label>
    </dt>
    <dd>
      <select name="estadoControle" id="estadoControle" >
          <option value="0">Todos</option>
          <option value="Aberto" [% IF (c.req.param('estadoControle') == 'Aberto') %] selected [% END %] >Aberto</option>
          <option value="Fechado" [% IF (c.req.param('estadoControle') == 'Fechado') %] selected [% END %]>Fechado</option>
      </select>
    </dd>
    <dt>
      <label for="controle">Situa&ccedil;&atilde;o de Aprovação:</label>
    </dt>
    <dd>
      <select name="estadoAprovacao" id="estadoAprovacao" >
          <option value="0">Todos</option>
          <option value="Digitado" [% IF (c.req.param('estadoAprovacao') == 'Digitado') %] selected [% END %]>Digitado</option>
          <option value="Aprovado" [% IF (c.req.param('estadoAprovacao') == 'Aprovado') %] selected [% END %]>Aprovado</option>
          <option value="Rejeitado" [% IF (c.req.param('estadoAprovacao') == 'Rejeitado') %] selected [% END %]>Rejeitado</option>
      </select>
    </dd>
    <dt class="dtsemdd"><A href="#" onclick="if ($('#buscasFormulario').hasClass('escondido')) { $('#buscasFormulario').removeClass('escondido') } else { $('#buscasFormulario').addClass('escondido') }; return false">Mostrar/Esconder buscas no formulário</A>
    </dt>
  </dl>


[%# comeca com class escondido, pode ser removido depois %]
  <fieldset id='buscasFormulario'[% IF (!tem_consulta_formulario) %] class='escondido'[% END %]>

   [% conteudo_buscasFormulario %]

  </fieldset>

  <input type="submit" name="buscar" value="Buscar" />
</fieldset>

<table>
<thead>
[% IF modificador_rowspan %]
  <tr>
    <th rowspan="2">Controle</th>
    <th rowspan="2">Situa&ccedil;&atilde;o do Controle</th>
    <th rowspan="2">A&ccedil;&otilde;es</th>
    <th>Data da Digita&ccedil;&atilde;o</th>
    <th>Digitador</th>
    <th>Estado</th>
    <th>IP</th>
    <th>A&ccedil;&otilde;es</th>
  </tr>
  <tr>
    <th colspan="5">Valor do campo pesquisado</th>
  </tr>
[% ELSE %]
  <tr>
    <th>Controle</th>
    <th>Situa&ccedil;&atilde;o do Controle</th>
    <th>A&ccedil;&otilde;es</th>
    <th>Data da Digita&ccedil;&atilde;o</th>
    <th>Digitador</th>
    <th>Estado</th>
    <th>IP</th>
    <th>A&ccedil;&otilde;es</th>
  </tr>
[% END %]
</thead>
<tbody>

[% TRY %]

 [%#  c.model('Sedna').conn.setConnectionAttr_CONCURRENCY_TYPE(c.model('Sedna').conn.SEDNA_READONLY_TRANSACTION); %]

 [% c.model('Sedna').begin %]
 [% c.model('Sedna').execute( xquery )%]

 [% WHILE (item = c.model('Sedna').get_item) %]  
 [% item %]
 [% END %]
 [% c.model('Sedna').commit %]

 [% c.model('Sedna').conn.setConnectionAttr_CONCURRENCY_TYPE(c.model('Sedna').conn.SEDNA_UPDATE_TRANSACTION); %]

[% CATCH %]
 <div class="erro">ERRO AO PROCESSAR CONSULTA:
  <PRE>[% error.info %]</PRE>
 </div>
[% END %]
</tbody>
</table>

[% IF interval_ini > 0 %]
  [% SET args = { } %]
  [% args.import(c.req.params()) %]
  [% args.import({ interval_ini => interval_ini - 1 }) %]
  <a href="[% c.uri_for_action('/auth/registros/revisor/leitura/lista',
                                     [ leitura.id_leitura ], args ) %]">Anterior</a>
[% END %]
  [% SET args = { } %]
  [% args.import(c.req.params()) %]
  [% args.import({ interval_ini => interval_ini + 1 }) %]
  <a href="[% c.uri_for_action('/auth/registros/revisor/leitura/lista',
                                     [ leitura.id_leitura ], args ) %]">Pr&oacute;ximo</a>

</form>

<script type="text/javascript">
    function valida_campos_busca(){
        if(document.getElementById('buscar_dados').checked) {
            if(document.getElementById('campo_formulario').value == '0'){
                alert('Preencha o campo formulário.');
                document.getElementById('campo_formulario').focus();
                return false;
            }
            if(document.getElementById('campo_operador').value  == '0'){
                alert('Preencha o campo operador.');
                document.getElementById('campo_operador').focus();
                return false;
            }
            if(document.getElementById('valor_pesquisado').value == ''){
                alert('Preencha o campo formulário.');
                document.getElementById('valor_pesquisado').focus();
                return false;
            }
        }
        return true;
    }
</script>
[% INCLUDE 'footer.tt' %]
